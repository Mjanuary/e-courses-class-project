[{"/Users/pro/dev/e-courses-class-project/src/index.js":"1","/Users/pro/dev/e-courses-class-project/src/App.js":"2","/Users/pro/dev/e-courses-class-project/src/reportWebVitals.js":"3","/Users/pro/dev/e-courses-class-project/src/Components/Navigation/Navigation.js":"4","/Users/pro/dev/e-courses-class-project/src/Components/Navigation/Footer/Footer.js":"5","/Users/pro/dev/e-courses-class-project/src/Components/SideNavidation/SideNavigation.js":"6","/Users/pro/dev/e-courses-class-project/src/Containers/Homepage/Homepage.js":"7","/Users/pro/dev/e-courses-class-project/src/Containers/About/About.js":"8","/Users/pro/dev/e-courses-class-project/src/Containers/NotFound/NotFound.js":"9","/Users/pro/dev/e-courses-class-project/src/Containers/Login/Login.js":"10","/Users/pro/dev/e-courses-class-project/src/Containers/Courses/Courses.js":"11","/Users/pro/dev/e-courses-class-project/src/Containers/CourseDetails/CourseDetails.js":"12","/Users/pro/dev/e-courses-class-project/src/Containers/BlogDetails/BlogDetails.js":"13","/Users/pro/dev/e-courses-class-project/src/Containers/PricingDetails/PricingDetails.js":"14","/Users/pro/dev/e-courses-class-project/src/Containers/Signup/Signup.js":"15","/Users/pro/dev/e-courses-class-project/src/Containers/CreateBlogCourse/CreateBlogCourse.js":"16","/Users/pro/dev/e-courses-class-project/src/Containers/CreateEvent/CreateEvent.js":"17","/Users/pro/dev/e-courses-class-project/src/Containers/TimeTable/TimeTable.js":"18","/Users/pro/dev/e-courses-class-project/src/Containers/Blogs/Blogs.js":"19","/Users/pro/dev/e-courses-class-project/src/Containers/Pricing/Pricing.js":"20","/Users/pro/dev/e-courses-class-project/src/Containers/CreateVideoCourse/CreateVideoCourse.js":"21","/Users/pro/dev/e-courses-class-project/src/axios-api.js":"22","/Users/pro/dev/e-courses-class-project/src/Containers/CreateBlogCourse/CreateFile.js":"23","/Users/pro/dev/e-courses-class-project/src/Containers/CreateVideoCourse/CreateFile.js":"24","/Users/pro/dev/e-courses-class-project/src/Components/ProfileModal/ProfileModal.js":"25","/Users/pro/dev/e-courses-class-project/src/assets/tools.js":"26","/Users/pro/dev/e-courses-class-project/src/assets/dataClean.js":"27","/Users/pro/dev/e-courses-class-project/src/assets/data.js":"28","/Users/pro/dev/e-courses-class-project/src/Components/BackDrop/BackDrop.js":"29"},{"size":500,"mtime":1607315068000,"results":"30","hashOfConfig":"31"},{"size":7035,"mtime":1607638354000,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":1607315068000,"results":"33","hashOfConfig":"31"},{"size":2514,"mtime":1607645330000,"results":"34","hashOfConfig":"31"},{"size":3223,"mtime":1607409546000,"results":"35","hashOfConfig":"31"},{"size":1018,"mtime":1607499388000,"results":"36","hashOfConfig":"31"},{"size":1144,"mtime":1607556740000,"results":"37","hashOfConfig":"31"},{"size":201,"mtime":1607409876000,"results":"38","hashOfConfig":"31"},{"size":447,"mtime":1577876696000,"results":"39","hashOfConfig":"31"},{"size":3708,"mtime":1607622818000,"results":"40","hashOfConfig":"31"},{"size":4054,"mtime":1607646080000,"results":"41","hashOfConfig":"31"},{"size":2954,"mtime":1607625480000,"results":"42","hashOfConfig":"31"},{"size":4768,"mtime":1607539394000,"results":"43","hashOfConfig":"31"},{"size":207,"mtime":1607409920000,"results":"44","hashOfConfig":"31"},{"size":12570,"mtime":1607622996000,"results":"45","hashOfConfig":"31"},{"size":16796,"mtime":1607540908000,"results":"46","hashOfConfig":"31"},{"size":15241,"mtime":1607624050000,"results":"47","hashOfConfig":"31"},{"size":508,"mtime":1607540042000,"results":"48","hashOfConfig":"31"},{"size":4167,"mtime":1607645954000,"results":"49","hashOfConfig":"31"},{"size":15896,"mtime":1607639836000,"results":"50","hashOfConfig":"31"},{"size":17332,"mtime":1607524622000,"results":"51","hashOfConfig":"31"},{"size":157,"mtime":1607411070000,"results":"52","hashOfConfig":"31"},{"size":2666,"mtime":1607495880000,"results":"53","hashOfConfig":"31"},{"size":2666,"mtime":1607491496000,"results":"54","hashOfConfig":"31"},{"size":2360,"mtime":1607477646000,"results":"55","hashOfConfig":"31"},{"size":1579,"mtime":1607527634000,"results":"56","hashOfConfig":"31"},{"size":204,"mtime":1607417408000,"results":"57","hashOfConfig":"31"},{"size":341,"mtime":1607531922000,"results":"58","hashOfConfig":"31"},{"size":290,"mtime":1607476306000,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"44rpwh",{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/pro/dev/e-courses-class-project/src/index.js",[],["124","125"],"/Users/pro/dev/e-courses-class-project/src/App.js",["126","127","128"],"/Users/pro/dev/e-courses-class-project/src/reportWebVitals.js",[],"/Users/pro/dev/e-courses-class-project/src/Components/Navigation/Navigation.js",[],"/Users/pro/dev/e-courses-class-project/src/Components/Navigation/Footer/Footer.js",[],"/Users/pro/dev/e-courses-class-project/src/Components/SideNavidation/SideNavigation.js",[],"/Users/pro/dev/e-courses-class-project/src/Containers/Homepage/Homepage.js",["129"],"import React from \"react\";\n// import PropTypes from \"prop-types\";\n\nconst Homepage = (props) => {\n  return (\n    <div className=\"container\">\n      <div className=\"ndary\">\n        <img\n          src=\"https://www.fortbendisd.com/cms/lib/TX01917858/Centricity/Domain/17285/At_Home%20Learning-01.jpg\"\n          className=\"w-100\"\n          alt=\"the image\"\n        />\n        {/* <h1 className=\"m-0\">Homepage</h1> */}\n        <br />\n        <br />\n        <p>\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Dignissimos\n          deserunt, reprehenderit praesentium earum ullam, et nobis quis numquam\n          molestias laudantium expedita porro quaerat eum dolores tempora\n          facilis repellendus veniam eius.\n        </p>\n        <br />\n        <p>\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Dignissimos\n          deserunt, reprehenderit praesentium earum ullam, et nobis quis numquam\n          molestias laudantium expedita porro quaerat eum dolores tempora\n          facilis repellendus veniam eius.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nHomepage.propTypes = {};\n\nexport default Homepage;\n","/Users/pro/dev/e-courses-class-project/src/Containers/About/About.js",[],"/Users/pro/dev/e-courses-class-project/src/Containers/NotFound/NotFound.js",[],"/Users/pro/dev/e-courses-class-project/src/Containers/Login/Login.js",["130"],"/Users/pro/dev/e-courses-class-project/src/Containers/Courses/Courses.js",["131"],"/Users/pro/dev/e-courses-class-project/src/Containers/CourseDetails/CourseDetails.js",["132","133","134"],"/Users/pro/dev/e-courses-class-project/src/Containers/BlogDetails/BlogDetails.js",["135","136","137"],"import React, { Component } from \"react\";\r\nimport axios from \"../../axios-api\";\r\nimport { STRING_SLICE, DATE } from \"../../assets/tools\";\r\nimport { MdPerson } from \"react-icons/md\";\r\nimport dataClean from \"../../assets/dataClean\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//\r\nclass CourseDetails extends Component {\r\n  state = {\r\n    loading: true,\r\n    data: null,\r\n    loading: true,\r\n    success: null,\r\n    blogs: [],\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.setState({\r\n      loading: true,\r\n      success: null,\r\n    });\r\n    axios\r\n      .get(`/blog_courses.json`)\r\n      .then((res) => {\r\n        console.log({ res });\r\n        let data = [];\r\n        let details = null;\r\n        if (res.data === null) {\r\n          data = [];\r\n        } else {\r\n          data = dataClean(res.data);\r\n          details = dataClean(res.data).find(\r\n            (itm) => itm.id === this.props.match.params.course_id\r\n          );\r\n        }\r\n        this.setState({\r\n          loading: false,\r\n          success: true,\r\n          error: null,\r\n          data: details === undefined ? null : details,\r\n          blogs: data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log({ error });\r\n        this.setState({\r\n          loading: false,\r\n          success: null,\r\n          error: true,\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading === true) {\r\n      return (\r\n        <div className=\"p-4 m-4\">\r\n          <div className=\"d-flex justify-content-center\">\r\n            <div className=\"spinner-border text-primary\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    let data = this.state.data;\r\n    return (\r\n      <>\r\n        <div className=\"container-lg\">\r\n          <img className=\"img w-100\" alt=\"section lg\" src={data.thumbnail} />\r\n          <h2 className=\"m-0 mt-4 mb-3 font-weight-bold text-primary\">\r\n            {data.title}\r\n          </h2>\r\n\r\n          <div className=\"row mx-0\">\r\n            <div className=\"col\">\r\n              <div className=\"\">\r\n                <span className=\"badge bg-primary text-white\">\r\n                  <h4 className=\"m-0 p-2 d-inline-block\">{data.plan_type}</h4>\r\n                </span>{\" \"}\r\n                <span className=\"badge  bg-warning\">\r\n                  <h4 className=\"m-0 p-2  d-inline-block\">{data.category}</h4>\r\n                </span>\r\n                <div className=\"w-50 pt-3 pb-2\">\r\n                  <h4 className=\"m-0 mb-2\">\r\n                    <i className=\"m-0 front-weight-light text-secondary\">\r\n                      <MdPerson /> Teacher:{\" \"}\r\n                    </i>\r\n                    <b>{data.teacher}</b>\r\n                  </h4>\r\n                  <h4 className=\"m-0 mb-2\">\r\n                    <i className=\"m-0 front-weight-light text-secondary\">\r\n                      <MdPerson /> Date:{\" \"}\r\n                    </i>\r\n                    <b>{data.date}</b>\r\n                  </h4>\r\n                </div>\r\n                <section\r\n                  className=\"blog-details-html\"\r\n                  dangerouslySetInnerHTML={{ __html: data.description }}\r\n                />\r\n                {/* <p className=\"mt-3 pt-4 w-75\">{data.description}</p> */}\r\n              </div>\r\n            </div>\r\n            <div className=\" col-lg-4 col-md-4 col-sm-12\">\r\n              <h4 className=\"m-0\">Blogs</h4>\r\n              {this.state.blogs\r\n                .filter((el) => el.plan_type === data.plan_type)\r\n                .map((itm) => (\r\n                  <div className=\"row pt-2 p-2 mx-0 mb-3 shadow\">\r\n                    <div className=\"col-5 p-0\">\r\n                      <img\r\n                        src={itm.thumbnail}\r\n                        alt=\"details\"\r\n                        className=\"w-100 img-thumbnail\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <h5\r\n                        //   className=\"text-primary\"\r\n                        onClick={() => {\r\n                          if (itm.id === data.id) {\r\n                            return true;\r\n                          }\r\n                          this.setState({ data: itm });\r\n                        }}\r\n                      >\r\n                        <Link\r\n                          to={`/blog-details/${itm.id}`}\r\n                          className=\"text-primary\"\r\n                        >\r\n                          {itm.title}\r\n                        </Link>\r\n                      </h5>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CourseDetails;\r\n","/Users/pro/dev/e-courses-class-project/src/Containers/PricingDetails/PricingDetails.js",[],"/Users/pro/dev/e-courses-class-project/src/Containers/Signup/Signup.js",[],"/Users/pro/dev/e-courses-class-project/src/Containers/CreateBlogCourse/CreateBlogCourse.js",["138"],"import React, { Component } from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport axios from \"../../axios-api\";\r\nimport SuccessImage from \"../../Images/success-image.jpg\";\r\nimport ErrorImages from \"../../Images/error-image.jpg\";\r\nimport RegisterImage from \"../../Images/register-image.jpg\";\r\nimport CreateFile from \"./CreateFile\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { course_categories } from \"../../assets/data\";\r\n\r\n//\r\nclass CreateBlogCourse extends Component {\r\n  state = {\r\n    error: {\r\n      target: null,\r\n      msg: \"\",\r\n    },\r\n    title: \"\",\r\n    thumbnail: \"\",\r\n    video: \"\",\r\n    plan_type: \"\",\r\n    category: \"\",\r\n    limited: true,\r\n    keywords: \"\",\r\n    description: \"\",\r\n    files: [],\r\n    teacher: \"\",\r\n    date: null,\r\n\r\n    loading: false,\r\n    success: null,\r\n    failed: null,\r\n    add_file: false,\r\n  };\r\n\r\n  inputChange = (e) =>\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n      error: {\r\n        target: null,\r\n        msg: \"\",\r\n      },\r\n    });\r\n\r\n  componentDidMount = () => {\r\n    if (this.props.isAuthenticated === true) {\r\n      if (this.props.user.admin === false) {\r\n        this.props.history.push(\"/courses\");\r\n      }\r\n    } else {\r\n      this.props.history.push(\"/login\");\r\n    }\r\n  };\r\n\r\n  SubmitData = (e) => {\r\n    e.preventDefault();\r\n    // form validation\r\n\r\n    // title\r\n    if (this.state.title.length <= 0) {\r\n      return this.setState({\r\n        error: {\r\n          target: \"title\",\r\n          msg: \"Your title are required.\",\r\n        },\r\n      });\r\n    }\r\n    // thumbnail\r\n    if (this.state.thumbnail.length <= 0) {\r\n      return this.setState({\r\n        error: {\r\n          target: \"thumbnail\",\r\n          msg: \"thumbnail is required.\",\r\n        },\r\n      });\r\n    }\r\n\r\n    // plan_type\r\n    if (this.state.plan_type.length <= 0) {\r\n      return this.setState({\r\n        error: {\r\n          target: \"plan_type\",\r\n          msg: \"plan_type is required.\",\r\n        },\r\n      });\r\n    }\r\n\r\n    // plan_type\r\n    if (this.state.category.length <= 0) {\r\n      return this.setState({\r\n        error: {\r\n          target: \"category\",\r\n          msg: \"date of birth is required.\",\r\n        },\r\n      });\r\n    }\r\n\r\n    // limited\r\n    if (this.state.limited.length <= 0) {\r\n      return this.setState({\r\n        error: {\r\n          target: \"limited\",\r\n          msg: \"limited is required.\",\r\n        },\r\n      });\r\n    }\r\n\r\n    // keywords\r\n    if (this.state.keywords.length <= 0) {\r\n      return this.setState({\r\n        error: {\r\n          target: \"keywords\",\r\n          msg: \"Your keywords does not match.\",\r\n        },\r\n      });\r\n    }\r\n\r\n    // description\r\n    if (this.state.description.length <= 0) {\r\n      return this.setState({\r\n        error: {\r\n          target: \"description\",\r\n          msg: \"Your description does not match.\",\r\n        },\r\n      });\r\n    }\r\n\r\n    // // Teacher\r\n    // if (this.state.Teacher.length <= 0) {\r\n    //   return this.setState({\r\n    //     error: {\r\n    //       target: \"Teacher\",\r\n    //       msg: \"Your Teacher does not match.\",\r\n    //     },\r\n    //   });\r\n    // }\r\n\r\n    // send the data into the database\r\n    this.setState({\r\n      loading: true,\r\n      success: null,\r\n      error: { target: null, msg: \"\" },\r\n    });\r\n    axios\r\n      .post(\"/blog_courses.json\", {\r\n        title: this.state.title,\r\n        thumbnail: this.state.thumbnail,\r\n        plan_type: this.state.plan_type,\r\n        category: this.state.category,\r\n        limited: this.state.limited,\r\n        keywords: this.state.keywords,\r\n        description: this.state.description,\r\n        files: this.state.files,\r\n        teacher:\r\n          this.state.teacher.length <= 0\r\n            ? this.props.user.names\r\n            : this.state.teacher,\r\n        files: this.state.files,\r\n        date: new Date(),\r\n        status: true,\r\n      })\r\n      .then((res) => {\r\n        console.log({ res });\r\n        this.setState({\r\n          loading: false,\r\n          success: true,\r\n          error: null,\r\n          created_file_id: res.data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log({ error });\r\n        this.setState({\r\n          loading: false,\r\n          success: null,\r\n          error: true,\r\n        });\r\n      });\r\n  };\r\n\r\n  addFile = (data) => {\r\n    console.log({ data });\r\n    this.setState({\r\n      files: [data, ...this.state.files],\r\n      add_file: false,\r\n    });\r\n  };\r\n\r\n  // render the data\r\n  render() {\r\n    if (this.state.success === true) {\r\n      return (\r\n        <div className=\"container text-center bg-white p-4 rounded\">\r\n          <div className=\"zoomIn animated p-4\">\r\n            <img src={SuccessImage} className=\"w-50\" alt=\"Success login\" />\r\n            <h3 className=\"text-success\">\r\n              The course has been created successfuly\r\n            </h3>\r\n            <p>your course has been published</p>\r\n\r\n            <div className=\"mt-2\">\r\n              <Link to=\"/\" className=\"btn btn-lg btn-outline-success\">\r\n                open course details\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (this.state.failed === true) {\r\n      return (\r\n        <div className=\"container text-center bg-white p-4 rounded\">\r\n          <div className=\"zoomIn animated p-4\">\r\n            <img src={ErrorImages} className=\"w-50\" alt=\"error login\" />\r\n            <h3 className=\"text-danger\">Failed to create an account</h3>\r\n            <p>nPlease try again later</p>\r\n\r\n            <div className=\"mt-2\">\r\n              <button\r\n                className=\"btn btn-outline-primary\"\r\n                onClick={() =>\r\n                  this.setState({\r\n                    success: null,\r\n                    failed: null,\r\n                    loading: false,\r\n                  })\r\n                }\r\n              >\r\n                Try again\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row mx-0\">\r\n          <div className=\"col-md-12 col-lg-6\">\r\n            <img src={RegisterImage} className=\"w-100\" alt=\"register\" />\r\n            <h1 className=\"mt-2 text-center text-primary\">\r\n              All you need is an account\r\n            </h1>\r\n            <p className=\"text-center\">\r\n              Create an account and <br /> access more than 50000+ courses.\r\n            </p>\r\n          </div>\r\n          <div className=\"col-md-12 col-lg-6\">\r\n            <div className=\"p-4 \">\r\n              <h1 className=\"text-primary text-center font-weight-bold border-bottom pb-2\">\r\n                Create a blog\r\n              </h1>\r\n              <form onSubmit={this.SubmitData}>\r\n                {/* title */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"title\">Title</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={`form-control ${\r\n                      this.state.error.target === \"title\" ? \"is-invalid\" : \"\"\r\n                    }`}\r\n                    id=\"title\"\r\n                    value={this.state.title}\r\n                    onChange={this.inputChange}\r\n                    disabled={this.state.loading}\r\n                    name=\"title\"\r\n                  />\r\n                  {this.state.error.target === \"title\" && (\r\n                    <small\r\n                      id=\"thumbnailHelp\"\r\n                      className=\"form-text text-danger \"\r\n                    >\r\n                      {this.state.error.msg}\r\n                    </small>\r\n                  )}\r\n                </div>\r\n\r\n                {/* thumbnail */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"thumbnail\">thumbnail</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={`form-control ${\r\n                      this.state.error?.target === \"thumbnail\"\r\n                        ? \"is-invalid\"\r\n                        : \"\"\r\n                    }`}\r\n                    id=\"thumbnail\"\r\n                    value={this.state.thumbnail}\r\n                    onChange={this.inputChange}\r\n                    disabled={this.state.loading}\r\n                    name=\"thumbnail\"\r\n                  />\r\n                  {this.state.error.target === \"thumbnail\" && (\r\n                    <small\r\n                      id=\"thumbnailHelp\"\r\n                      className=\"form-text text-danger \"\r\n                    >\r\n                      {this.state.error.msg}\r\n                    </small>\r\n                  )}\r\n                </div>\r\n\r\n                {/* plan_type */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"plan_type\">Plan type</label>\r\n                  <select\r\n                    className={`form-control ${\r\n                      this.state.error.target === \"plan_type\"\r\n                        ? \"is-invalid\"\r\n                        : \"\"\r\n                    }`}\r\n                    id=\"plan_type\"\r\n                    value={this.state.plan_type}\r\n                    onChange={this.inputChange}\r\n                    disabled={this.state.loading}\r\n                    name=\"plan_type\"\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"Student\">Student</option>\r\n                    <option value=\"Premium\">Premium</option>\r\n                    <option value=\"Profession\">Profession</option>\r\n                  </select>\r\n                  {this.state.error.target === \"plan_type\" && (\r\n                    <small\r\n                      id=\"thumbnailHelp\"\r\n                      className=\"form-text text-danger \"\r\n                    >\r\n                      {this.state.error.msg}\r\n                    </small>\r\n                  )}\r\n                </div>\r\n\r\n                {/* categories */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"category\">Categories</label>\r\n                  <select\r\n                    type=\"date\"\r\n                    className={`form-control ${\r\n                      this.state.error.target === \"category\" ? \"is-invalid\" : \"\"\r\n                    }`}\r\n                    id=\"category\"\r\n                    value={this.state.category}\r\n                    onChange={this.inputChange}\r\n                    disabled={this.state.loading}\r\n                    name=\"category\"\r\n                  >\r\n                    {course_categories.map((itm, i) => (\r\n                      <option value={itm} key={i}>\r\n                        {itm}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {this.state.error.target === \"category\" && (\r\n                    <small\r\n                      id=\"thumbnailHelp\"\r\n                      className=\"form-text text-danger \"\r\n                    >\r\n                      {this.state.error.msg}\r\n                    </small>\r\n                  )}\r\n                </div>\r\n\r\n                {/* limited */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"limited\">limited</label>\r\n                  <select\r\n                    type=\"text\"\r\n                    className={`form-control ${\r\n                      this.state.error.target === \"limited\" ? \"is-invalid\" : \"\"\r\n                    }`}\r\n                    id=\"limited\"\r\n                    value={this.state.limited}\r\n                    onChange={this.inputChange}\r\n                    disabled={this.state.loading}\r\n                    name=\"limited\"\r\n                  >\r\n                    <option value=\"\"></option>\r\n                    <option value={true}>Unlimited</option>\r\n                    <option value={false}>Limited</option>\r\n                  </select>\r\n                  {this.state.error.target === \"limited\" && (\r\n                    <small\r\n                      id=\"thumbnailHelp\"\r\n                      className=\"form-text text-danger \"\r\n                    >\r\n                      {this.state.error.msg}\r\n                    </small>\r\n                  )}\r\n                </div>\r\n\r\n                {/* keywords */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"keywords\">Keywords</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={`form-control ${\r\n                      this.state.error.target === \"keywords\" ? \"is-invalid\" : \"\"\r\n                    }`}\r\n                    id=\"keywords\"\r\n                    value={this.state.keywords}\r\n                    onChange={this.inputChange}\r\n                    disabled={this.state.loading}\r\n                    name=\"keywords\"\r\n                  />\r\n                  {this.state.error.target === \"keywords\" && (\r\n                    <small\r\n                      id=\"thumbnailHelp\"\r\n                      className=\"form-text text-danger \"\r\n                    >\r\n                      {this.state.error.msg}\r\n                    </small>\r\n                  )}\r\n                </div>\r\n\r\n                {/* description */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"exampleFormControlTextarea1\">\r\n                    Description\r\n                  </label>\r\n                  <textarea\r\n                    className={`form-control ${\r\n                      this.state.error.target === \"description\"\r\n                        ? \"is-invalid\"\r\n                        : \"\"\r\n                    }`}\r\n                    id=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.inputChange}\r\n                    disabled={this.state.loading}\r\n                    name=\"description\"\r\n                    rows={8}\r\n                  />\r\n                </div>\r\n\r\n                {/* files */}\r\n                <div className=\"form-group pt-3\">\r\n                  <ul className=\"list-group\">\r\n                    {this.state.files.map((itm, i) => (\r\n                      <li className=\"list-group-item\" key={i}>\r\n                        <b>{itm.name}</b>{\" \"}\r\n                        <p className=\"m-0 mt-1 text-secondary\">{itm.url}</p>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                  {this.state.add_file === false && (\r\n                    <div className=\"border rounded p-1\">\r\n                      <button\r\n                        onClick={() =>\r\n                          this.setState({\r\n                            add_file: true,\r\n                          })\r\n                        }\r\n                        className=\"btn btn-sm btn-success\"\r\n                      >\r\n                        Add file\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                {this.state.add_file === true && (\r\n                  <CreateFile\r\n                    success={this.addFile}\r\n                    close={() =>\r\n                      this.setState({\r\n                        add_file: false,\r\n                      })\r\n                    }\r\n                  />\r\n                )}\r\n                <br />\r\n                {/* keywords */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"teacher\">Teacher</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={`form-control ${\r\n                      this.state.error.target === \"teacher\" ? \"is-invalid\" : \"\"\r\n                    }`}\r\n                    id=\"teacher\"\r\n                    value={this.state.teacher}\r\n                    onChange={this.inputChange}\r\n                    disabled={this.state.loading}\r\n                    name=\"teacher\"\r\n                  />\r\n                  {this.state.error.target === \"teacher\" && (\r\n                    <small\r\n                      id=\"thumbnailHelp\"\r\n                      className=\"form-text text-danger \"\r\n                    >\r\n                      {this.state.error.msg}\r\n                    </small>\r\n                  )}\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <button\r\n                  className=\"btn btn-success btn-lg btl-lg btn-block\"\r\n                  disabled={this.state.loading}\r\n                >\r\n                  {this.state.loading === true ? (\r\n                    <span className=\"fadeIn animated infinite\">Loading...</span>\r\n                  ) : (\r\n                    \"Create & Publish course\"\r\n                  )}\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCreateBlogCourse.propTypes = {};\r\n\r\nexport default CreateBlogCourse;\r\n","/Users/pro/dev/e-courses-class-project/src/Containers/CreateEvent/CreateEvent.js",[],"/Users/pro/dev/e-courses-class-project/src/Containers/TimeTable/TimeTable.js",[],"/Users/pro/dev/e-courses-class-project/src/Containers/Blogs/Blogs.js",[],"/Users/pro/dev/e-courses-class-project/src/Containers/Pricing/Pricing.js",["139"],"/Users/pro/dev/e-courses-class-project/src/Containers/CreateVideoCourse/CreateVideoCourse.js",["140"],"import React, { Component } from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport axios from \"../../axios-api\";\r\nimport SuccessImage from \"../../Images/success-image.jpg\";\r\nimport ErrorImages from \"../../Images/error-image.jpg\";\r\nimport RegisterImage from \"../../Images/register-image.jpg\";\r\nimport CreateFile from \"./CreateFile\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { course_categories } from \"../../assets/data\";\r\nclass CreateVideoCourse extends Component {\r\n  state = {\r\n    error: {\r\n      target: null,\r\n      msg: \"\",\r\n    },\r\n    title: \"\",\r\n    thumbnail: \"\",\r\n    video: \"\",\r\n    plan_type: \"\",\r\n    category: \"\",\r\n    limited: true,\r\n    keywords: \"\",\r\n    description: \"\",\r\n    files: [],\r\n    teacher: \"\",\r\n    date: null,\r\n\r\n    loading: false,\r\n    success: null,\r\n    failed: null,\r\n    add_file: false,\r\n  };\r\n\r\n  inputChange = (e) =>\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n      error: {\r\n        target: null,\r\n        msg: \"\",\r\n      },\r\n    });\r\n\r\n  componentDidMount = () => {\r\n    if (this.props.isAuthenticated === true) {\r\n      if (this.props.user.admin === false) {\r\n        this.props.history.push(\"/courses\");\r\n      }\r\n    } else {\r\n      this.props.history.push(\"/login\");\r\n    }\r\n  };\r\n\r\n  SubmitData = (e) => {\r\n    e.preventDefault();\r\n    // form validation\r\n\r\n    // title\r\n    if (this.state.title.length <= 0) {\r\n      return this.setState({\r\n        error: {\r\n          target: \"title\",\r\n          msg: \"Your title are required.\",\r\n        },\r\n      });\r\n    }\r\n    // thumbnail\r\n    if (this.state.thumbnail.length <= 0) {\r\n      return this.setState({\r\n        error: {\r\n          target: \"thumbnail\",\r\n          msg: \"thumbnail is required.\",\r\n        },\r\n      });\r\n    }\r\n\r\n    // plan_type\r\n    if (this.state.video.length <= 6) {\r\n      return this.setState({\r\n        error: {\r\n          target: \"video\",\r\n          msg: \"video must be above 7 characters.\",\r\n        },\r\n      });\r\n    }\r\n\r\n    // plan_type\r\n    if (this.state.plan_type.length <= 0) {\r\n      return this.setState({\r\n        error: {\r\n          target: \"plan_type\",\r\n          msg: \"plan_type is required.\",\r\n        },\r\n      });\r\n    }\r\n\r\n    // category\r\n    if (this.state.category === \"\") {\r\n      return this.setState({\r\n        error: {\r\n          target: \"category\",\r\n          msg: \"category is required.\",\r\n        },\r\n      });\r\n    }\r\n\r\n    // limited\r\n    if (this.state.limited.length <= 0) {\r\n      return this.setState({\r\n        error: {\r\n          target: \"limited\",\r\n          msg: \"limited is required.\",\r\n        },\r\n      });\r\n    }\r\n\r\n    // keywords\r\n    if (this.state.keywords.length <= 0) {\r\n      return this.setState({\r\n        error: {\r\n          target: \"keywords\",\r\n          msg: \"Your keywords does not match.\",\r\n        },\r\n      });\r\n    }\r\n\r\n    // description\r\n    if (this.state.description.length <= 0) {\r\n      return this.setState({\r\n        error: {\r\n          target: \"description\",\r\n          msg: \"Your description does not match.\",\r\n        },\r\n      });\r\n    }\r\n\r\n    // // Teacher\r\n    // if (this.state.Teacher.length <= 0) {\r\n    //   return this.setState({\r\n    //     error: {\r\n    //       target: \"Teacher\",\r\n    //       msg: \"Your Teacher does not match.\",\r\n    //     },\r\n    //   });\r\n    // }\r\n\r\n    // send the data into the database\r\n    this.setState({\r\n      loading: true,\r\n      success: null,\r\n      error: { target: null, msg: \"\" },\r\n    });\r\n    axios\r\n      .post(\"/video_courses.json\", {\r\n        title: this.state.title,\r\n        thumbnail: this.state.thumbnail,\r\n        video: this.state.video,\r\n        plan_type: this.state.plan_type,\r\n        category: this.state.category,\r\n        limited: this.state.limited,\r\n        keywords: this.state.keywords,\r\n        description: this.state.description,\r\n        files: this.state.files,\r\n        teacher:\r\n          this.state.teacher.length <= 0\r\n            ? this.props.user.names\r\n            : this.state.teacher,\r\n        files: this.state.files,\r\n        date: new Date(),\r\n        status: true,\r\n      })\r\n      .then((res) => {\r\n        console.log({ res });\r\n        this.setState({\r\n          loading: false,\r\n          success: true,\r\n          error: null,\r\n          created_file_id: res.data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log({ error });\r\n        this.setState({\r\n          loading: false,\r\n          success: null,\r\n          error: true,\r\n        });\r\n      });\r\n  };\r\n\r\n  addFile = (data) => {\r\n    console.log({ data });\r\n    this.setState({\r\n      files: [data, ...this.state.files],\r\n      add_file: false,\r\n    });\r\n  };\r\n\r\n  // render the data\r\n  render() {\r\n    if (this.state.success === true) {\r\n      return (\r\n        <div className=\"container text-center bg-white p-4 rounded\">\r\n          <div className=\"zoomIn animated p-4\">\r\n            <img src={SuccessImage} className=\"w-50\" alt=\"Success login\" />\r\n            <h3 className=\"text-success\">\r\n              The course has been created successfuly\r\n            </h3>\r\n            <p>your course has been published</p>\r\n\r\n            <div className=\"mt-2\">\r\n              <Link to=\"/\" className=\"btn btn-lg btn-outline-success\">\r\n                open course details\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (this.state.failed === true) {\r\n      return (\r\n        <div className=\"container text-center bg-white p-4 rounded\">\r\n          <div className=\"zoomIn animated p-4\">\r\n            <img src={ErrorImages} className=\"w-50\" alt=\"error login\" />\r\n            <h3 className=\"text-danger\">Failed to create an account</h3>\r\n            <p>Please try again later</p>\r\n\r\n            <div className=\"mt-2\">\r\n              <button\r\n                className=\"btn btn-outline-primary\"\r\n                onClick={() =>\r\n                  this.setState({\r\n                    success: null,\r\n                    failed: null,\r\n                    loading: false,\r\n                  })\r\n                }\r\n              >\r\n                Try again\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row mx-0\">\r\n          <div className=\"col-md-12 col-lg-6\">\r\n            <img src={RegisterImage} className=\"w-100\" alt=\"register\" />\r\n            <h1 className=\"mt-2 text-center text-primary\">\r\n              All you need is an account\r\n            </h1>\r\n            <p className=\"text-center\">\r\n              Create an account and <br /> access more than 50000+ courses.\r\n            </p>\r\n          </div>\r\n          <div className=\"col-md-12 col-lg-6\">\r\n            <div className=\"p-4 \">\r\n              <h1 className=\"text-primary text-center font-weight-bold border-bottom pb-2\">\r\n                Create a course\r\n              </h1>\r\n              <form onSubmit={this.SubmitData}>\r\n                {/* title */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"title\">Title</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={`form-control ${\r\n                      this.state.error.target === \"title\" ? \"is-invalid\" : \"\"\r\n                    }`}\r\n                    id=\"title\"\r\n                    value={this.state.title}\r\n                    onChange={this.inputChange}\r\n                    disabled={this.state.loading}\r\n                    name=\"title\"\r\n                  />\r\n                  {this.state.error.target === \"title\" && (\r\n                    <small className=\"form-text text-danger\">\r\n                      {this.state.error.msg}\r\n                    </small>\r\n                  )}\r\n                </div>\r\n\r\n                {/* thumbnail */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"thumbnail\">thumbnail</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={`form-control ${\r\n                      this.state.error?.target === \"thumbnail\"\r\n                        ? \"is-invalid\"\r\n                        : \"\"\r\n                    }`}\r\n                    id=\"thumbnail\"\r\n                    value={this.state.thumbnail}\r\n                    onChange={this.inputChange}\r\n                    disabled={this.state.loading}\r\n                    name=\"thumbnail\"\r\n                  />\r\n                  {this.state.error.target === \"thumbnail\" && (\r\n                    <small className=\"form-text text-danger \">\r\n                      {this.state.error.msg}\r\n                    </small>\r\n                  )}\r\n                </div>\r\n\r\n                {/* video */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"video\">video</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={`form-control ${\r\n                      this.state.error.target === \"video\" ? \"is-invalid\" : \"\"\r\n                    }`}\r\n                    id=\"video\"\r\n                    value={this.state.video}\r\n                    onChange={this.inputChange}\r\n                    disabled={this.state.loading}\r\n                    name=\"video\"\r\n                  />\r\n                  {this.state.error.target === \"video\" && (\r\n                    <small className=\"form-text text-danger \">\r\n                      {this.state.error.msg}\r\n                    </small>\r\n                  )}\r\n                </div>\r\n\r\n                {/* plan_type */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"plan_type\">Plan type</label>\r\n                  <select\r\n                    className={`form-control ${\r\n                      this.state.error.target === \"plan_type\"\r\n                        ? \"is-invalid\"\r\n                        : \"\"\r\n                    }`}\r\n                    id=\"plan_type\"\r\n                    onChange={this.inputChange}\r\n                    disabled={this.state.loading}\r\n                    name=\"plan_type\"\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"Student\">Student</option>\r\n                    <option value=\"Premium\">Premium</option>\r\n                    <option value=\"Profession\">Profession</option>\r\n                  </select>\r\n                  {this.state.error.target === \"plan_type\" && (\r\n                    <small className=\"form-text text-danger \">\r\n                      {this.state.error.msg}\r\n                    </small>\r\n                  )}\r\n                </div>\r\n\r\n                {/* categories */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"category\">Categories</label>\r\n                  <select\r\n                    type=\"date\"\r\n                    className={`form-control ${\r\n                      this.state.error.target === \"category\" ? \"is-invalid\" : \"\"\r\n                    }`}\r\n                    id=\"category\"\r\n                    value={this.state.category}\r\n                    onChange={this.inputChange}\r\n                    disabled={this.state.loading}\r\n                    name=\"category\"\r\n                  >\r\n                    <option></option>\r\n                    {course_categories.map((itm, i) => (\r\n                      <option value={itm} key={i}>\r\n                        {itm}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {this.state.error.target === \"category\" && (\r\n                    <small\r\n                      id=\"thumbnailHelp\"\r\n                      className=\"form-text text-danger \"\r\n                    >\r\n                      {this.state.error.msg}\r\n                    </small>\r\n                  )}\r\n                </div>\r\n\r\n                {/* limited */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"limited\">limited</label>\r\n                  <select\r\n                    type=\"text\"\r\n                    className={`form-control ${\r\n                      this.state.error.target === \"limited\" ? \"is-invalid\" : \"\"\r\n                    }`}\r\n                    id=\"limited\"\r\n                    value={this.state.limited}\r\n                    onChange={this.inputChange}\r\n                    disabled={this.state.loading}\r\n                    name=\"limited\"\r\n                  >\r\n                    <option value=\"\"></option>\r\n                    <option value={true}>Unlimited</option>\r\n                    <option value={false}>Limited</option>\r\n                  </select>\r\n                  {this.state.error.target === \"limited\" && (\r\n                    <small className=\"form-text text-danger \">\r\n                      {this.state.error.msg}\r\n                    </small>\r\n                  )}\r\n                </div>\r\n\r\n                {/* keywords */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"keywords\">Keywords</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={`form-control ${\r\n                      this.state.error.target === \"keywords\" ? \"is-invalid\" : \"\"\r\n                    }`}\r\n                    id=\"keywords\"\r\n                    value={this.state.keywords}\r\n                    onChange={this.inputChange}\r\n                    disabled={this.state.loading}\r\n                    name=\"keywords\"\r\n                  />\r\n                  {this.state.error.target === \"keywords\" && (\r\n                    <small className=\"form-text text-danger \">\r\n                      {this.state.error.msg}\r\n                    </small>\r\n                  )}\r\n                </div>\r\n\r\n                {/* description */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"exampleFormControlTextarea1\">\r\n                    Description\r\n                  </label>\r\n                  <textarea\r\n                    className={`form-control ${\r\n                      this.state.error.target === \"description\"\r\n                        ? \"is-invalid\"\r\n                        : \"\"\r\n                    }`}\r\n                    id=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.inputChange}\r\n                    disabled={this.state.loading}\r\n                    name=\"description\"\r\n                    rows={3}\r\n                  />\r\n                </div>\r\n\r\n                {/* files */}\r\n                <div className=\"form-group pt-3\">\r\n                  <ul className=\"list-group\">\r\n                    {this.state.files.map((itm, i) => (\r\n                      <li className=\"list-group-item\" key={i}>\r\n                        <b>{itm.name}</b>{\" \"}\r\n                        <p className=\"m-0 mt-1 text-secondary\">{itm.url}</p>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                  {this.state.add_file === false && (\r\n                    <div className=\"border rounded p-1\">\r\n                      <button\r\n                        onClick={() =>\r\n                          this.setState({\r\n                            add_file: true,\r\n                          })\r\n                        }\r\n                        className=\"btn btn-sm btn-success\"\r\n                      >\r\n                        Add file\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                {this.state.add_file === true && (\r\n                  <CreateFile\r\n                    success={this.addFile}\r\n                    close={() =>\r\n                      this.setState({\r\n                        add_file: false,\r\n                      })\r\n                    }\r\n                  />\r\n                )}\r\n                <br />\r\n                {/* keywords */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"teacher\">Teacher</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={`form-control ${\r\n                      this.state.error.target === \"teacher\" ? \"is-invalid\" : \"\"\r\n                    }`}\r\n                    id=\"teacher\"\r\n                    value={this.state.teacher}\r\n                    onChange={this.inputChange}\r\n                    disabled={this.state.loading}\r\n                    name=\"teacher\"\r\n                  />\r\n                  {this.state.error.target === \"teacher\" && (\r\n                    <small className=\"form-text text-danger \">\r\n                      {this.state.error.msg}\r\n                    </small>\r\n                  )}\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <button\r\n                  className=\"btn btn-success btn-lg btl-lg btn-block\"\r\n                  disabled={this.state.loading}\r\n                >\r\n                  {this.state.loading === true ? (\r\n                    <span className=\"fadeIn animated infinite\">Loading...</span>\r\n                  ) : (\r\n                    \"Create & Publish course\"\r\n                  )}\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCreateVideoCourse.propTypes = {};\r\n\r\nexport default CreateVideoCourse;\r\n","/Users/pro/dev/e-courses-class-project/src/axios-api.js",[],"/Users/pro/dev/e-courses-class-project/src/Containers/CreateBlogCourse/CreateFile.js",[],"/Users/pro/dev/e-courses-class-project/src/Containers/CreateVideoCourse/CreateFile.js",[],"/Users/pro/dev/e-courses-class-project/src/Components/ProfileModal/ProfileModal.js",[],"/Users/pro/dev/e-courses-class-project/src/assets/tools.js",["141"],"const MONTHS = [\r\n  \"\",\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\",\r\n];\r\n\r\nconst DAYS_NAMES = [\r\n  \"Sunday\",\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thoursday\",\r\n  \"Friday\",\r\n  \"Saturday\",\r\n];\r\n\r\nexport const percent = (partialValue, totalValue) => {\r\n  return (100 * partialValue) / totalValue;\r\n};\r\n\r\nexport const NUMBER_FORMAT = (cash) =>\r\n  new Intl.NumberFormat(\"ja-JP\").format(cash);\r\n\r\nexport const STRING_SLICE = (text, len) => {\r\n  if (text !== undefined && text !== null) {\r\n    return text.length > len ? text.slice(0, len) + \"...\" : text;\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const DATE = (data) => {\r\n  if (data == null || data === undefined) {\r\n    return \"\";\r\n  } else {\r\n    const date = new Date(data);\r\n    return date.getDate() + \"/\" + date.getMonth() + \"/\" + date.getFullYear();\r\n  }\r\n};\r\n\r\nexport const DATE_CUSTOM = (data) => {\r\n  if (data == null || data === undefined) {\r\n    return \"\";\r\n  } else {\r\n    const date = new Date(data);\r\n    let monthName = MONTHS[date.getMonth()];\r\n    return date.getMonth() >= 1 || date.getMonth() <= 12\r\n      ? date.getDate() + \" \" + monthName + \" \" + date.getFullYear()\r\n      : date.getDate() + \" \" + date.getMonth() + \" \" + date.getFullYear();\r\n  }\r\n};\r\n\r\nexport const TIME = (data) => {\r\n  if (data == null || data === undefined) {\r\n    return \"\";\r\n  } else {\r\n    const date = new Date(data);\r\n    return date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\r\n  }\r\n};\r\n","/Users/pro/dev/e-courses-class-project/src/assets/dataClean.js",[],"/Users/pro/dev/e-courses-class-project/src/assets/data.js",[],"/Users/pro/dev/e-courses-class-project/src/Components/BackDrop/BackDrop.js",[],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":32,"column":19,"nodeType":"148","messageId":"149","endLine":32,"endColumn":29},{"ruleId":"146","severity":1,"message":"150","line":33,"column":10,"nodeType":"148","messageId":"149","endLine":33,"endColumn":17},{"ruleId":"146","severity":1,"message":"151","line":33,"column":19,"nodeType":"148","messageId":"149","endLine":33,"endColumn":28},{"ruleId":"152","severity":1,"message":"153","line":8,"column":9,"nodeType":"154","endLine":12,"endColumn":11},{"ruleId":"155","severity":1,"message":"156","line":16,"column":6,"nodeType":"157","endLine":16,"endColumn":8,"suggestions":"158"},{"ruleId":"159","severity":1,"message":"160","line":12,"column":5,"nodeType":"161","messageId":"162","endLine":12,"endColumn":12},{"ruleId":"146","severity":1,"message":"163","line":3,"column":10,"nodeType":"148","messageId":"149","endLine":3,"endColumn":22},{"ruleId":"146","severity":1,"message":"164","line":3,"column":24,"nodeType":"148","messageId":"149","endLine":3,"endColumn":28},{"ruleId":"159","severity":1,"message":"160","line":9,"column":5,"nodeType":"161","messageId":"162","endLine":9,"endColumn":12},{"ruleId":"146","severity":1,"message":"163","line":3,"column":10,"nodeType":"148","messageId":"149","endLine":3,"endColumn":22},{"ruleId":"146","severity":1,"message":"164","line":3,"column":24,"nodeType":"148","messageId":"149","endLine":3,"endColumn":28},{"ruleId":"159","severity":1,"message":"160","line":13,"column":5,"nodeType":"161","messageId":"162","endLine":13,"endColumn":12},{"ruleId":"159","severity":1,"message":"165","line":158,"column":9,"nodeType":"161","messageId":"162","endLine":158,"endColumn":14},{"ruleId":"159","severity":1,"message":"166","line":24,"column":5,"nodeType":"161","messageId":"162","endLine":24,"endColumn":12},{"ruleId":"159","severity":1,"message":"165","line":167,"column":9,"nodeType":"161","messageId":"162","endLine":167,"endColumn":14},{"ruleId":"146","severity":1,"message":"167","line":17,"column":7,"nodeType":"148","messageId":"149","endLine":17,"endColumn":17},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'setisPayed' is assigned a value but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'seLoading' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.history' and 'props.isAuthenticated'. Either include them or remove the dependency array.","ArrayExpression",["170"],"no-dupe-keys","Duplicate key 'loading'.","ObjectExpression","unexpected","'STRING_SLICE' is defined but never used.","'DATE' is defined but never used.","Duplicate key 'files'.","Duplicate key 'success'.","'DAYS_NAMES' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"171","fix":"172"},"Update the dependencies array to be: [props.history, props.isAuthenticated]",{"range":"173","text":"174"},[512,514],"[props.history, props.isAuthenticated]"]